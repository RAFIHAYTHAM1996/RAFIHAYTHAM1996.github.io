{"version":3,"file":"static/webpack/static/development/pages/index.js.86fb40f16e2d2b87944a.hot-update.js","sources":["webpack:///./sections/Testimonials/Testimonials.js"],"sourcesContent":["'use strict';\nimport React, { Fragment } from 'react';\nimport { TweenMax, TimelineMax, EasePack} from 'gsap';\nimport Recaptcha from 'react-google-recaptcha';\nimport settings from '../../util/settings';\nimport ChevronCircleSVG from '../../static/svg/chevon-circle-right.svg'\nimport data from '../../static/json/data.json';\n\nclass Testimonials extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      analyticsSubmitted: {\n        scroll: false,\n        form: false\n      },\n      current: 0\n    }\n    this.AnimationElements = []\n    this.animating = false;\n    this.ASSET_PATH = settings.ASSET_PATH + \"images/testimonials/\"\n    this.data = data.testimonials.widget && data.testimonials.widget.length > 0 ? data.testimonials.widget : [];\n  }\n  componentDidMount() {\n    TweenMax.to(this.container, 0.5, {autoAlpha: 1});\n    TweenMax.set(this.AnimationElements, {autoAlpha: 0});\n    this.animateIn();\n  }\n  componentWillUnmount() {\n    TweenMax.set(this.container, {autoAlpha: 0});\n  }\n  animateIn = () => {\n    var tl = new TimelineMax({paused: true});\n    tl.staggerFromTo(this.AnimationElements, 2, {autoAlpha: 0, y: 50}, {autoAlpha: 1, y: 0, ease: Expo.easeOut}, 0.25);\n    tl.play();\n  }\n  getTestimonial = (index) => {\n    if (!this.animating) {\n      this.animating = true;\n      let nextIndex = this.state.current;\n      if (index > 0) {\n        nextIndex = this.state.current < this.data.length - 1 ? nextIndex + 1 : 0;\n      } else if (index < 0) {\n        nextIndex = this.state.current > 0 ? nextIndex - 1 : this.data.length - 1;\n      }\n\n      const interval = 0.5, direction = index > 0 ? -1 : 1;\n\n      // Animate out\n      TweenMax.staggerTo(this.TestimonialData.children, interval, { y: -10 * direction, autoAlpha: 0, ease: Power3.easeInOut, onComplete: () => {\n        this.setState({ ...this.state, current: nextIndex });\n        // Animate in\n        TweenMax.staggerFromTo(this.TestimonialData.children, interval, { y: 10 * direction }, { y: 0, autoAlpha: 1, ease: Power3.easeInOut }, 0.1);\n        this.animating = false;\n      }}, 0.1);\n    }\n  }\n\n  render() {\n    this.AnimationElements = []\n    const testimonial = this.data[this.state.current];\n    \n    return <div\n      className=\"section-testimonials\"\n      // style={{backgroundImage: `url(${this.ASSET_PATH + 'background.jpg'})`}}\n      ref={el => this.container = el}\n    >\n      { testimonial &&\n        <Fragment>\n          <div className=\"row\" style={{ width: \"100%\" }}>\n            <div className=\"col-10 offset-1 testimonials-heading\">\n              <h1>What Our Clients Are Saying</h1>\n            </div>\n          </div>\n          <div className=\"row testimonial\">\n            <div className=\"col-10 offset-1 col-md-6 offset-md-3 testimonial-data-container\" ref={el => this.TestimonialData = el}>\n              <h4>{ testimonial.name }</h4>\n              <p className=\"mini\" style={{fontStyle: \"italic\"}}>{ testimonial.relationship }</p>\n              <p>\"{ testimonial.review }\"</p>\n            </div>\n            <img className=\"chevron left\" src={ChevronCircleSVG} alt=\"chevron-left\"\n               onClick={ this.getTestimonial.bind(this, -1) } style={{transform: \"rotateY(-180deg)\"}}/>\n            <img className=\"chevron right\" src={ChevronCircleSVG} alt=\"chevron-right\"\n                onClick={ this.getTestimonial.bind(this, 1) }/>\n          </div>\n        </Fragment>\n      }\n    </div>;\n  }\n};\n\nexport default Testimonials;\n"],"mappings":";;;;;;;;;;AAAA;AACA;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAzBA;AACA;AADA;AA4BA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AALA;AAMA;AA9CA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AALA;AAOA;AACA;AACA;AACA;AAZA;AAaA;AACA;;;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AA4BA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AADA;AAGA;AAAA;AAAA;AAHA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAEA;AAAA;AAAA;AACA;AADA;AAMA;;;;AAhFA;AACA;AAgFA;AAEA;;;;;A","sourceRoot":""}
