{"version":3,"file":"static/webpack/static/development/pages/careers.js.0d69a45f6b107c282887.hot-update.js","sources":["webpack:///./components/Form/InputField/InputField.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TweenMax } from 'gsap';\nimport { isEqual } from 'lodash';\n\nexport default class InputField extends Component {\n  constructor(props) {\n    super(props);\n    this.DEFAULT_STATE = {\n      value: \"\",\n      error: \"\",\n      valid: !this.props.isRequired,\n      showError: false\n    }\n    this.state = this.DEFAULT_STATE;\n    this.acceptString = '';\n    this.props.accept.forEach(extension => {\n      switch (extension.toLowerCase()) {\n        case 'pdf':\n          this.acceptString += 'application/pdf,'\n        case 'doc':\n          this.acceptString += 'application/msword,'\n        case 'docx':\n          this.acceptString += 'application/vnd.openxmlformats-officedocument.wordprocessingml.document,'\n      }\n    });\n    this.FILE_INPUT_PLACEHOLDER = `Upload File (${this.props.accept.join(', ')})`;\n  }\n\n  componentWillMount() {\n    if (this.props.type === 'file') this.setState({ secondaryTitle: this.FILE_INPUT_PLACEHOLDER });\n  }\n\n  componentDidUpdate() {\n    if (this.props.showError === true && this.state.showError === false) {\n      this.validate(this.Input);\n    }\n    // this.adjustErrorHeight();\n  }\n\n  componentWillUnmount() {\n    this.state = {};\n  }\n\n  handleChange = (e) => {\n    this.validate(e.target);\n    if (this.props.type === 'file') {\n      this.setState({ secondaryTitle: (e.target.value || this.FILE_INPUT_PLACEHOLDER).replace(/^.*[\\\\\\/]/, ''), files: e.target.files });\n    };\n    this.props.onChange && this.props.onChange(e, this);\n  }\n\n  adjustErrorHeight = () => {\n    if (this.state.showError && this.state.error !== \"\") {\n      TweenMax.to(this.container, 0.25, {marginBottom: (this.error.getBoundingClientRect().height - 4)})\n    } else {\n      TweenMax.to(this.container, 0.25, {marginBottom: 0})\n    }\n  }\n\n  validate = (target) => {\n    if (!target) return;\n    if (this.props.isRequired) {\n      var valid = true, errMsg = \"\";\n      if (target.value.length === 0) {\n        valid = false;\n        errMsg = \"Required\";\n      } else {\n        if (!this.props.skipValidation) {\n          switch (this.props.type) {\n            case \"password\":\n              if (this.props.compareTo) {\n                if (target.value !== this.props.compareTo) {\n                  valid = false;\n                  errMsg = \"Passwords do not match. Please try again.\";\n                }\n              } else if (target.value.length < 6 || target.value.length > 32) {\n                valid = false;\n                errMsg = \"Password length must be between 6 and 32\";\n              }\n              break;\n            case \"email\":\n              if (!target.value.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n                valid = false;\n                errMsg = \"Please enter a valid email address\";\n              }\n              break;\n            case \"phone\":\n              if (!target.value.match(/^\\+?[0-9]{0,}\\(?([0-9]{3})\\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/)) {\n                valid = false;\n                errMsg = \"Please enter a valid phone number (eg. 123-456-7890)\";\n              }\n              break;\n            case \"file\":\n              let regexStr = '(';\n              this.props.accept.forEach((extension, index) => {\n                regexStr += extension;\n                if (index < this.props.accept.length - 1) regexStr += '|'\n              })\n              regexStr += ')';\n              if (!target.value.replace(/^.+[\\.]/, '').match(new RegExp(regexStr, 'i'))) {\n                valid = false;\n                errMsg = \"Please choose an appropriate file to upload\";\n              }\n              break;\n            case \"postalcode\":\n              if (!target.value.match(/([ABCEGHJKLMNPRSTVXY][0-9])[ABCEGHJKLMNPRSTVWXYZ][- ]?[0-9][ABCEGHJKLMNPRSTVWXYZ][0-9]/i)) {\n                valid = false;\n                errMsg = \"Please enter a valid postal code\";\n              }\n              break;\n            default:\n          }\n        }\n      }\n      const nextState = { value: target.value, error: errMsg, valid: valid, showError: true };\n      if (!isEqual(nextState, this.state)) this.setState(nextState);\n    } else {\n      // this.setState({value: target.value, error: \"\", valid: true, showError: true});\n      this.setState({ value: target.value, error: \"\", valid: true, showError: false });\n    }\n  }\n\n  toggleFocus = (on) => {\n    if (on) {\n      if (this.container.className.indexOf(\"focused\") == -1)\n        this.container.className += \" focused\";\n    } else {\n      this.container.className = this.container.className.replace(\" focused\", \"\");\n    }\n  }\n\n  reset = () => {\n    this.setState(this.DEFAULT_STATE);\n  }\n\n  focusInput = () => {\n    if (this.label) this.label.click();\n  }\n\n  render() {\n    const { id, label, type, minLength, maxLength } = this.props;\n    const { showError, error, secondaryTitle, value } = this.state;\n    return (\n      <div className={`FormInput TextField ${showError && error ? 'error' : ''}`} ref={el => this.container = el}>\n        <label htmlFor={ id } ref={el => this.label = el}>{ label }</label>\n        { secondaryTitle &&\n          <p\n            className=\"secondaryTitle\"\n            role=\"button\"\n            onClick={this.focusInput}\n            onKeyDown={this.focusInput}\n          >\n            { secondaryTitle }\n          </p>\n        }\n        <input\n          value={ value }\n          id={ id }\n          ref={el => this.Input = el}\n          accept={ this.acceptString }\n          maxLength={ maxLength || '' }\n          minLength={ minLength || '' }\n          onChange={ this.handleChange }\n          onFocus={ this.toggleFocus.bind(this, true) }\n          onBlur={ this.toggleFocus.bind(this, false) }\n          type={ type } />\n        {/* { showError && error !== \"\" && <span className=\"error\" ref={el => this.error = el}>{error}</span> } */}\n      </div>\n    );\n  }\n}\n\nInputField.propTypes = {\n  accept: PropTypes.array,\n  id: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string\n  ]).isRequired,\n  isRequired: PropTypes.bool,\n  label: PropTypes.string,\n  maxLength: PropTypes.number,\n  minLength: PropTypes.number,\n  type: PropTypes.string.isRequired\n}\n\nInputField.defaultProps = {\n  accept: [],\n  isRequired: false,\n  type: 'text'\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuCA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AACA;AA3CA;AACA;AADA;AA+CA;AACA;AAAA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AAnDA;AACA;AADA;AAuDA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AA1CA;AA4CA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtDA;AAwDA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAlHA;AACA;AADA;AAsHA;AACA;AADA;AAIA;AACA;AA3HA;AACA;AADA;AA+HA;AA/HA;AACA;AADA;AAmIA;AAnIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AANA;AADA;AACA;AASA;AApBA;AAqBA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AAFA;AACA;AAIA;;;AAEA;AACA;AACA;;;AAkGA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAUA;AACA;AACA;AAAA;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAcA;;;;AArKA;AACA;;AAuKA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAVA;AAaA;AACA;AACA;AACA;AAHA;;;;A","sourceRoot":""}
