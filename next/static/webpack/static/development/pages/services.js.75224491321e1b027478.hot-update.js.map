{"version":3,"file":"static/webpack/static/development/pages/services.js.75224491321e1b027478.hot-update.js","sources":["webpack:///./pages/services.js"],"sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport Head from \"next/head\";\nimport Page from \"../layouts/main\";\nimport Footer from \"../components/Footer/Footer\";\nimport PageHeader from \"../components/PageHeader/PageHeader\";\nimport Testimonials from \"../sections/Testimonials/Testimonials\";\nimport { TweenLite } from 'gsap';\nimport ScrollToPlugin from 'gsap/ScrollToPlugin';\nimport settings from \"../util/settings\";\nimport ReactGA from 'react-ga';\nimport data from '../static/json/data.json';\nimport makePath from '../util/make-path';\n\nclass Services extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      router: {},\n      activeService: -1\n    }\n    this.ASSET_PATH = settings.ASSET_PATH + \"images/\";\n    this.linkedService = undefined;\n  }\n\n  componentDidMount() {\n    let active = -1;\n    for(let i = 0; i < data.services.length; i++) {\n      if (makePath(data.services[i].name) === window.location.pathname.substr(window.location.pathname.lastIndexOf('/') + 1)) {\n        this.linkedService = window.location.pathname.substr(window.location.pathname.lastIndexOf('/') + 1);\n        active = i;\n        break;\n      }\n    }\n    if (active === -1) active = 0;\n    this.setState({ activeService: active });\n  }\n\n  componentDidUpdate() {\n    if (window.innerWidth <= 575) {\n      const svc = this.linkedService || this.serviceRefs[this.state.activeService];\n      if(svc) TweenLite.to(window, 1, { scrollTo: window.pageYOffset + this.serviceRefs[this.state.activeService].getBoundingClientRect().top - 150 });\n    }\n  }\n\n  formatDetails = info =>\n    info.map((item, index) => {\n      return typeof item === 'object' && item.length ? (\n        <ul style={{ paddingLeft: 15, textAlign: 'left' }} key={index}>\n          { item.map((listItem, idx) => <li key={idx}><p className=\"dark\">{ listItem }</p></li> ) }\n        </ul>\n      ) : (\n        <p className=\"dark\" key={index}>{ item }</p>\n      );\n    });\n\n  render() {\n    const service = data.services[this.state.activeService];\n    this.serviceRefs = [];\n    return (\n      <Page id=\"Services\" menu={{solidStyle: true}} ref={el => this.Page = el}>\n        <PageHeader\n          title='Services'\n          image='services.jpg'\n          description='We will deliver the highest quality of personalized private care to our clients and their families. The Hospall team provides caring, dependable and reliable assistance. Our caregivers live out but provide 24 hour a day coverage offering total peace of mind.'\n        />\n        <div className=\"ContentContainer service-summaries\">\n          <div className=\"row\">\n            <div className=\"col-12 col-sm-4\">\n              { data.services.map( (item, index) => {\n                  const className = this.state.activeService === index ? 'active' : '';\n                  return (\n                    <Fragment>\n                      <p key={ index }\n                        ref={el => { this.serviceRefs[index] = el }}\n                        className={`service-name ${className}`}\n                        onClick={() => this.setState({ activeService: index })}>\n                        { item.name }\n                      </p>\n                      { this.state.activeService === index &&\n                        <div className=\"ContentContainer offset-1 col-10 d-sm-none\"\n                          style={{ marginTop: 20, marginBottom: 20, height: 'auto', textAlign: 'center' }}>\n                          { service && this.formatDetails(service.description) }\n                        </div>\n                      }\n                    </Fragment>\n                  )\n                })\n              }\n            </div>\n            <div className=\"d-none d-sm-block col-sm-8 col-lg-7\">\n              <h3 className='service-title dark'>{ service && service.name }</h3>\n              { service && this.formatDetails(service.description) }\n            </div>\n          </div>\n        </div>\n        <div className=\"row benefits-of-hospall\">\n          <div className=\"ContentContainer\">\n              <h3 className=\"dark\">The Benefits of Hospall Private Home Care</h3>\n              <div className=\"benefit-list\">\n                { data.benefits.map( (item, index) => {\n                    return (\n                      <div className=\"benefit-container col-md-6 col-lg-4\" key={ index }>\n                        <h1 className=\"benefit-number\">{ (index+1).toString().padStart(2, '0') }</h1>\n                        <h5 className=\"benefit-title dark\">{ item.name }</h5>\n                        <p className=\"dark\">{ item.description }</p>\n                      </div>\n                    )\n                  })\n                }\n              </div>\n          </div>\n        </div>\n        <Testimonials />\n      </Page>\n    )\n  }\n}\n\nexport default Services\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8BA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAKA;AAAA;AAAA;AAPA;AA9BA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAPA;AAQA;AACA;;;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAaA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAAA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAbA;AAuBA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AA7CA;AAwDA;;;;AAvGA;AACA;AAyGA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}