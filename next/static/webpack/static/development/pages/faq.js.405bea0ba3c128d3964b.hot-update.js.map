{"version":3,"file":"static/webpack/static/development/pages/faq.js.405bea0ba3c128d3964b.hot-update.js","sources":["webpack:///./components/InlineQuestion/InlineQuestion.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class InlineQuestion extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: typeof props.defaultExpanded !== 'undefined' ? !props.defaultExpanded : true\n    }\n  }\n\n  getState = ()=>{\n    return this.state.collapsed ? \"\" : \"expanded\";\n  }\n\n  toggleState = ()=>{\n    this.setState({collapsed: !this.state.collapsed})\n  }\n\n  render() {\n    const { answer, question } = this.props;\n    return (\n      <div className=\"InlineQuestion\">\n        <div onClick={this.toggleState}>\n          <div className={\"chevron \" + this.getState()}>\n            <svg viewBox=\"0 0 52 52\" onClick={ this.toggleState }>\n              <line x1={1} y1={25} x2={51} y2={25}/>\n              <line x1={1} y1={25} x2={51} y2={25}/>\n            </svg>\n          </div>\n          <h6 className={\"question \" + this.getState()}>{ question }</h6>\n        </div>\n        { answer && !this.state.collapsed &&\n          answer.map((paragraph, index) =>\n            <p className=\"col-12 col-md-10 answer\" key={ index }>{ paragraph }</p>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nInlineQuestion.propTypes = {\n  defaultExpanded: PropTypes.bool,\n  question: PropTypes.string.isRequired,\n  answer: PropTypes.arrayOf(PropTypes.string)\n}\n\nInlineQuestion.defaultProps = {\n  answer: ['Answer not available'],\n  defaultExpanded: false\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AARA;AACA;AADA;AAYA;AAAA;AAAA;AAZA;AACA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AASA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAbA;AAkBA;;;;AApCA;AACA;;AAsCA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;;;;A","sourceRoot":""}