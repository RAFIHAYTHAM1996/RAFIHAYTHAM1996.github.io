{"version":3,"file":"static/webpack/static/development/pages/careers.js.4eb3031d7a99def82d64.hot-update.js","sources":["webpack:///./layouts/main.js"],"sourcesContent":["import Head from 'next/head';\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from 'prop-types';\nimport Menu from '../components/Menu/Menu';\nimport Footer from '../components/Footer/Footer';\nimport Ribbon from \"../components/Ribbon/Ribbon\";\nimport Stats from '../util/stats';\nimport detect from '../util/detect/index.js';\nimport ReactGA from 'react-ga';\nimport settings from '../util/settings';\n\nexport default class Page extends Component {\n\n  componentDidMount() {\n    if (settings.isDev) Stats();\n    detect.init();\n    document.body.className = [...new Set([...document.body.className.split(' '), ...detect.classes()])].join(' ');\n    ReactGA.initialize(settings.GACcode)\n    ReactGA.pageview(window.location.pathname)\n\n    if (!settings.isServer()) {\n      window.addEventListener('resize', this.handleResize);\n      this.handleResize();\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  handleResize = () => {\n    if (!settings.isServer()) {\n      const orientation = window.innerHeight >= window.innerWidth ? \"portrait\" : \"landscape\";\n      const prevOrientation = document.body.className.indexOf('portrait') ? 'portrait' : 'landscape';\n      document.body.className = document.body.className.replace(prevOrientation, orientation);\n    }\n  }\n\n  render() {\n    const { id, children, className, menu } = this.props;\n    return (\n      <div id={id || \"\"} className={`Page${className ? ` ${className}` : ''}`}>\n        { (!menu || menu.show !== false) &&\n          <Fragment>\n            <Menu location={settings.isServer() ? {} : window.location} solidStyle={this.props.menu.solidStyle} />\n            <Ribbon />\n          </Fragment>\n        }\n        <Fragment>\n          { children }\n        </Fragment>\n        <Footer />\n      </div>\n    )\n  }\n}\n\nPage.propTypes = {\n  id: PropTypes.string,\n  children: PropTypes.array,\n  className: PropTypes.string,\n  menu: PropTypes.object\n}\n\nPage.defaultProps = {\n  id: '',\n  children: [],\n  className: '',\n  menu: {}\n}"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAtBA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAUA;;;;AA3CA;AACA;;AA6CA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AAJA;;;;A","sourceRoot":""}