{"version":3,"file":"static/webpack/static/development/pages/index.js.3b33507b4427a83a101f.hot-update.js","sources":["webpack:///./components/Menu/Menu.js"],"sourcesContent":["import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport TweenMax from 'gsap';\nimport Link from 'next/link'\nimport settings from '../../util/settings';\nimport data from '../../static/json/data.json';\nimport makePath from '../../util/make-path';\n// import Toggle from 'react-toggle';\n\nexport default class Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true,\n      responsive: false\n    }\n    this.MIN_SCREEN_WIDTH = 768;\n    this.links = [];\n    this.MENU_HEIGHT = 85;\n    this.menuHeight = 0;\n    this.animOn = false;\n    this.pages = [\"home\", \"about\", \"services\", \"testimonials\", \"contact\"]\n\n    // Add sublinks for mobile view\n    this.sublinks = {\n      'services': [],\n      'contact': [\n        { title: 'Contact Us',\n          url: '/contact'\n        },\n        { title: 'Careers',\n          url: '/careers'\n        }\n      ]\n    };\n    data.services.map(service => {\n      this.sublinks.services.push({\n        title: service.name,\n        url: `/services/${makePath(service.name)}`\n      })\n    })\n\n    this.ASSET_PATH = settings.ASSET_PATH + \"images/\"\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"scroll\", this.handleScroll)\n    window.addEventListener(\"resize\", this.checkResponsive)\n    this.checkResponsive();\n    setTimeout(this.handleScroll, 200)\n\n    // document.body.className += ' cta-button';\n\n    if (!this.state.responsive) {\n      TweenMax.fromTo(this.links, 1, {x: -10, y: -5}, {x: 0, y: 0, ease: Expo.easeOut, delay: 1})\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkResponsive();\n    if (this.state.collapsed) this.menuHeight = this.Menu.getBoundingClientRect().height;\n  }\n\n  checkResponsive = () => {\n    document.body.style.overflow = \"auto\"\n    if (!settings.isServer()) {\n      var responsive = window.innerWidth < this.MIN_SCREEN_WIDTH;\n      if (responsive != this.state.responsive) {\n        this.setState({ responsive: responsive, collapsed: true })\n      }\n    }\n  }\n\n  toggleMenu = (force, callback) => {\n    if (this.animOn) return;\n    var tl = new TimelineMax({paused: true, onComplete: ()=>{\n              if (!this.state.collapsed) {\n                document.body.style.overflow = \"auto\"\n              }\n              this.animOn = false;\n              this.setState({collapsed: !this.state.collapsed})\n            }}),\n        chldrn = this.MenuBtn ? this.MenuBtn.children : [],\n        time = 0.25;\n\n    this.animOn = true;\n    if (this.state.collapsed || (force && force == \"open\")) {\n      document.body.style.overflow = \"hidden\"\n      tl.set(this.collapsedLogo, {zIndex: 0});\n      tl.set(this.linkContainer, {autoAlpha: 1, display: \"block\"});\n      tl.to([chldrn[0], chldrn[1]], time, {y: 25, ease: Expo.easeOut})\n      tl.to([chldrn[4], chldrn[5]], time, {y: -25, ease: Expo.easeOut, delay: -time})\n      tl.set([chldrn[2], chldrn[3]], {autoAlpha: 0, onComplete: ()=> {\n        if (!this.props.solidStyle) this.addClass(this.Menu, \"solidStyle\")\n      }})\n      tl.to(this.Menu, time, {height: \"100vh\", ease: Expo.easeOut})\n      tl.to([chldrn[0], chldrn[1]], time, {rotationZ: \"-45deg\", transformOrigin: \"center center\", ease: Expo.easeOut, delay: -time})\n      tl.to([chldrn[4], chldrn[5]], time, {rotationZ: \"-135deg\", transformOrigin: \"center center\", ease: Expo.easeOut, delay: -time*0.8})\n      tl.to([chldrn[0], chldrn[2], chldrn[4]], time, {stroke: 'transparent', ease: Expo.easeOut, delay: -time})\n      tl.to([chldrn[1], chldrn[3], chldrn[5]], time, {stroke: settings.colors.primary, ease: Expo.easeOut, delay: -time})\n      tl.staggerFromTo(this.linkContainer.children, time, {autoAlpha: 0, y: -20}, {autoAlpha: 1, y: 0, ease: Expo.easeOut}, 0.1)\n    } else if (!this.state.collapsed || (force && force == \"close\")) {\n      tl.to([chldrn[4], chldrn[5]], time, {rotationZ: \"0deg\", transformOrigin: \"center center\", ease: Expo.easeIn})\n      tl.to([chldrn[0], chldrn[1]], time, {rotationZ: \"0deg\", transformOrigin: \"center center\", ease: Expo.easeIn, delay: -time*0.95})\n      tl.set([chldrn[2], chldrn[3]], {autoAlpha: 1})\n      tl.to(this.Menu, time, {height: this.menuHeight || this.MENU_HEIGHT, ease: Expo.easeOut, onComplete: ()=> {\n        if (!this.props.solidStyle) this.removeClass(this.Menu, \"solidStyle\")\n      }})\n      tl.staggerTo(this.linkContainer.children, time, {autoAlpha: 0, y: -10, ease: Expo.easeOut}, 0.1)\n      tl.to([chldrn[0], chldrn[2], chldrn[4]], time, {stroke: settings.colors.primary, ease: Expo.easeOut, delay: -time})\n      tl.to([chldrn[1], chldrn[3], chldrn[5]], time, {stroke: settings.colors.primaryLight, ease: Expo.easeOut, delay: -time})\n      tl.to([chldrn[4], chldrn[5], chldrn[0], chldrn[1]], time, {y: 0, ease: Expo.easeOut, delay: -time, onComplete: ()=> {\n        tl.set(this.linkContainer, {autoAlpha: 0, display: \"none\"});\n        tl.set(this.collapsedLogo, {zIndex: 1});\n      }})\n    }\n    tl.play();\n    if (typeof callback == \"function\") setTimeout(callback, (tl._totalDuration || time) * 1000);\n  }\n\n  handleScroll = () => {\n    // detect position on scroll and style accordingly\n    if (!settings.isServer() && !this.props.solidStyle && this.state.collapsed) {\n      window.pageYOffset < 40 ? this.removeClass(this.Menu, \"solidStyle\") : this.addClass(this.Menu, \"solidStyle\")\n    }\n  }\n\n  getLink = (page, index) => {\n    if (page) {\n      const title = page.replace(/\\-/g, ' ');\n      const link = `/${page === 'home' ? '' : page}`;\n      return (\n        <Fragment key={index}>\n          <Link href={link} ref={el => this.links[page] = el}>\n            <a className={\"mainlink col-12\"}>\n              { title }\n            </a>\n          </Link>\n          { this.getSubLinks(this.sublinks[page]) }\n        </Fragment>\n      )\n    }\n  }\n\n  getSubLinks = (sublinks = []) => {\n    return (\n      <div className='sublinks d-block d-md-none'>\n        { sublinks.map((link, index) => \n            <Link href={link.url} key={index}>\n              <a className=\"sublink\">{ link.title }</a>\n            </Link>\n          )\n        }\n      </div>\n    )\n  }\n\n  getMenuClasses = () => {\n    var classes = [];\n    if (this.props.solidStyle) classes.push(\"solidStyle\")\n    return (\" \" + classes.join(\" \"))\n  }\n\n  addClass = (obj, cls) => {\n    if (obj && cls) {\n      if (!obj.className.match(cls)) obj.className += \" \" + cls\n    }\n  }\n\n  removeClass = (obj, cls) => {\n    if (obj && cls) {\n      if (obj.className.match(cls)) obj.className = obj.className.replace(\" \" + cls, \"\")\n    }\n  }\n\n  // toggleCTA = e => {\n  //   document.body.className = document.body.className.replace(/\\s{2,}/, '');\n  //   document.body.className = document.body.className.replace(/cta-button/ig, '');\n  //   document.body.className = document.body.className.replace(/cta-text/ig, '');\n  //   document.body.className = [e.target.checked ? 'cta-button' : 'cta-text', ...document.body.className.split(' ')].join(' ');\n  // }\n\n  render() {\n    this.links = []\n    return (\n      <nav id=\"Menu\" className={\"navbar sticky-top\" + this.getMenuClasses()} ref={el => this.Menu = el}>\n        <div  className=\"container p-0\">\n            <a href='/' id=\"collapsedLogo-container\">\n              <img\n                id=\"collapsedLogo\"\n                alt=\"Brand Logo\"\n                className=\"menu-logo\"\n                src={this.ASSET_PATH + \"brand-landing.png\"}\n                ref={el => this.collapsedLogo = el} />\n            </a>\n            { !settings.isServer() &&\n                ( this.state.responsive ? (\n                  <div id=\"subcontainer\" className=\"row\">\n                    <div className=\"col-12\" style={{ padding: 0, minHeight: 40 }}>\n                      {/* <div style={{ marginRight: 50, float: 'right' }}>\n                        <Toggle defaultChecked={true} onChange={this.toggleCTA} />\n                      </div> */}\n                      <svg viewBox=\"0 0 70 56\" id=\"hamburger-menu\" ref={el => this.MenuBtn = el} onClick={this.toggleMenu}>\n                        <line x1={1} y1={7} x2={69} y2={7} className=\"shadow\"/>\n                        <line x1={1} y1={5} x2={69} y2={5}/>\n                        <line x1={1} y1={32} x2={69} y2={32} className=\"shadow\"/>\n                        <line x1={1} y1={30} x2={69} y2={30}/>\n                        <line x1={1} y1={57} x2={69} y2={57} className=\"shadow\"/>\n                        <line x1={1} y1={55} x2={69} y2={55}/>\n                      </svg>\n                    </div>\n                    <div className=\"col-12\" ref={el => this.linkContainer = el} style={{display: \"none\"}}>\n                      { this.pages.map((item, index) => (\n                          <div className=\"row\" key={index}>\n                            { this.getLink(item, index) }\n                          </div>\n                      ))}\n                    </div>\n                  </div>\n                ) : (\n                  <Fragment>\n                    {/* <div style={{ marginLeft: 100 }}>\n                      <Toggle defaultChecked={true} onChange={this.toggleCTA} />\n                    </div> */}\n                    <div id=\"subcontainer\"\n                        className=\"row\">\n                      <div className=\"col-12\">\n                        <span className=\"d-block d-md-none\">{ this.getLink(this.pages[0], 0) }</span>\n                        { this.pages.slice(1).map((item, index) => this.getLink(item, index)) }\n                      </div>\n                    </div>\n                  </Fragment>\n                )\n              )\n            }\n        </div>\n      </nav>\n    );\n  }\n}\n\nMenu.propTypes = {\n  device: PropTypes.string\n};\n\nMenu.defaultProps = {\n  device: \"desktop\"\n};\n"],"mappings":"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","sourceRoot":""}
